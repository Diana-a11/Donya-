import React, { useState, useEffect } from 'react';
import { Plus, RotateCcw, Trophy, Target } from 'lucide-react';

const NumberBuilderGame = () => {
  const [playerName, setPlayerName] = useState('');
  const [gameStarted, setGameStarted] = useState(false);
  const [availableNumbers, setAvailableNumbers] = useState([]);
  const [selectedNumbers, setSelectedNumbers] = useState([]);
  const [currentSum, setCurrentSum] = useState(0);
  const [targetNumber, setTargetNumber] = useState(50);
  const [score, setScore] = useState(0);
  const [level, setLevel] = useState(1);
  const [gameMessage, setGameMessage] = useState('');

  // Generate random numbers for the level
  const generateNumbers = (level) => {
    const numbers = [];
    const maxNum = Math.min(15 + level * 3, 30);
    
    for (let i = 0; i < 8 + level; i++) {
      numbers.push(Math.floor(Math.random() * maxNum) + 1);
    }
    return numbers.sort((a, b) => a - b);
  };

  // Initialize game
  useEffect(() => {
    if (gameStarted) {
      const numbers = generateNumbers(level);
      setAvailableNumbers(numbers);
      setTargetNumber(30 + level * 20);
    }
  }, [level, gameStarted]);

  // Calculate current sum
  useEffect(() => {
    const sum = selectedNumbers.reduce((acc, num) => acc + num, 0);
    setCurrentSum(sum);
    
    if (sum === targetNumber) {
      setGameMessage(`🎉 כל הכבוד ${playerName}! הגעת בדיוק למספר המטרה!`);
      setScore(score + 100 * level);
      setTimeout(() => {
        nextLevel();
      }, 2000);
    } else if (sum > targetNumber) {
      setGameMessage('😅 חרגת מהמספר! נסה שוב');
    } else if (selectedNumbers.length > 0) {
      const remaining = targetNumber - sum;
      setGameMessage(`עוד ${remaining} כדי להגיע למטרה`);
    } else {
      setGameMessage('בחר מספרים כדי להתחיל');
    }
  }, [selectedNumbers, targetNumber, playerName, score, level]);

  const selectNumber = (number, index) => {
    if (currentSum + number <= targetNumber) {
      setSelectedNumbers([...selectedNumbers, number]);
      setAvailableNumbers(availableNumbers.filter((_, i) => i !== index));
    }
  };

  const removeNumber = (number, index) => {
    setAvailableNumbers([...availableNumbers, number].sort((a, b) => a - b));
    setSelectedNumbers(selectedNumbers.filter((_, i) => i !== index));
  };

  const startGame = () => {
    if (playerName.trim()) {
      setGameStarted(true);
    }
  };

  const resetRound = () => {
    const numbers = generateNumbers(level);
    setAvailableNumbers(numbers);
    setSelectedNumbers([]);
    setGameMessage('بחר מספרים כדי להתחיל');
  };

  const nextLevel = () => {
    setLevel(level + 1);
    setSelectedNumbers([]);
    setGameMessage('');
  };

  // Name input screen
  if (!gameStarted) {
    return (
      <div className="max-w-4xl mx-auto p-6 bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen">
        <div className="text-center">
          <h1 className="text-5xl font-bold text-purple-800 mb-8">
            🔢 משחק בונה המספרים
          </h1>
          <div className="bg-white rounded-2xl p-8 shadow-lg max-w-md mx-auto">
            <h2 className="text-2xl font-bold text-gray-700 mb-6">שלום! מה השם שלך?</h2>
            <input
              type="text"
              placeholder="הכנס את השם שלך כאן..."
              value={playerName}
              onChange={(e) => setPlayerName(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && startGame()}
              className="w-full p-3 text-xl border-2 border-gray-300 rounded-lg mb-4 text-center focus:border-purple-500 focus:outline-none"
              dir="rtl"
            />
            <button
              onClick={startGame}
              disabled={!playerName.trim()}
              className="bg-purple-600 hover:bg-purple-700 disabled:bg-gray-400 text-white font-bold py-3 px-8 rounded-xl text-lg transition-colors shadow-lg"
            >
              בואו נתחיל לשחק! 🚀
            </button>
          </div>
        </div>
      </div>
    );
  }

  // Main game screen
  return (
    <div className="max-w-4xl mx-auto p-6 bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen">
      {/* Header */}
      <div className="text-center mb-8">
        <h1 className="text-4xl font-bold text-purple-800 mb-2">
          🔢 שלום {playerName}!
        </h1>
        <div className="flex justify-center items-center gap-6 text-lg">
          <div className="flex items-center gap-2 bg-yellow-100 px-4 py-2 rounded-full">
            <Trophy className="w-5 h-5 text-yellow-600" />
            <span className="font-bold text-yellow-800">ניקוד: {score}</span>
          </div>
          <div className="flex items-center gap-2 bg-green-100 px-4 py-2 rounded-full">
            <span className="font-bold text-green-800">שלב: {level}</span>
          </div>
        </div>
      </div>

      {/* Target */}
      <div className="text-center mb-6">
        <div className="inline-flex items-center gap-3 bg-red-100 px-6 py-4 rounded-2xl border-2 border-red-200">
          <Target className="w-8 h-8 text-red-600" />
          <span className="text-2xl font-bold text-red-800">
            מספר המטרה: {targetNumber}
          </span>
        </div>
      </div>

      {/* Current Sum Display */}
      <div className="text-center mb-6">
        <div className="bg-white rounded-xl p-6 shadow-lg border-2 border-gray-200">
          <div className="text-lg text-gray-600 mb-2">הסכום הנוכחי שלך:</div>
          <div className="flex items-center justify-center gap-2 mb-4">
            {selectedNumbers.map((num, index) => (
              <React.Fragment key={index}>
                <button
                  onClick={() => removeNumber(num, index)}
                  className="bg-blue-500 text-white px-4 py-2 rounded-lg font-bold hover:bg-blue-600 transition-colors cursor-pointer"
                >
                  {num}
                </button>
                {index < selectedNumbers.length - 1 && (
                  <Plus className="w-6 h-6 text-gray-400" />
                )}
              </React.Fragment>
            ))}
            {selectedNumbers.length > 0 && (
              <>
                <span className="text-2xl font-bold mx-2">=</span>
                <span className="text-3xl font-bold text-purple-600">{currentSum}</span>
              </>
            )}
          </div>
          <div className="text-lg font-semibold text-gray-700">
            {gameMessage}
          </div>
        </div>
      </div>

      {/* Available Numbers */}
      <div className="mb-6">
        <h3 className="text-xl font-bold text-center mb-4 text-gray-700">
          מספרים זמינים - לחץ כדי להוסיף
        </h3>
        <div className="grid grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-3">
          {availableNumbers.map((number, index) => (
            <button
              key={index}
              onClick={() => selectNumber(number, index)}
              className="bg-green-400 hover:bg-green-500 text-white font-bold py-4 px-2 rounded-xl text-lg transition-colors shadow-lg hover:shadow-xl transform hover:scale-105"
              disabled={currentSum + number > targetNumber}
            >
              {number}
            </button>
          ))}
        </div>
      </div>

      {/* Reset Button */}
      <div className="text-center">
        <button
          onClick={resetRound}
          className="bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-6 rounded-xl text-lg transition-colors shadow-lg flex items-center gap-2 mx-auto"
        >
          <RotateCcw className="w-5 h-5" />
          התחל מחדש
        </button>
      </div>

      {/* Instructions */}
      <div className="mt-8 bg-yellow-50 border-2 border-yellow-200 rounded-xl p-4">
        <h4 className="font-bold text-yellow-800 mb-2">איך לשחק:</h4>
        <ul className="text-yellow-700 space-y-1">
          <li>• לחץ על המספרים הקטנים כדי להוסיף אותם לסכום</li>
          <li>• נסה להגיע בדיוק למספר המטרה</li>
          <li>• לחץ על מספר כחול כדי להסיר אותו</li>
          <li>• המספרים נעים בין 1-30, כל שלב מביא מטרה גבוהה יותר!</li>
        </ul>
      </div>
    </div>
  );
};

export default NumberBuilderGame;